// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using PulseSystem.Infraestructure.Persistence;

#nullable disable

namespace PulseSystem.Infraestructure.Migrations
{
    [DbContext(typeof(PulseSystemContext))]
    [Migration("20251023224755_v1_initial_migration")]
    partial class v1_initial_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PulseSystem.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Employees", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("PulseSystem.Domain.Entities.Gateway", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("LastIP")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR2(15)");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("VARCHAR2(17)");

                    b.Property<decimal>("MaxCapacity")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("MaxCoverageArea")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<long>("ParkingId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("SYSDATE");

                    b.Property<decimal>("Status")
                        .HasColumnType("NUMBER");

                    b.HasKey("Id");

                    b.HasIndex("ParkingId");

                    b.ToTable("GATEWAYS", (string)null);
                });

            modelBuilder.Entity("PulseSystem.Domain.Entities.Parking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("AvailableArea")
                        .HasColumnType("NUMBER");

                    b.Property<decimal>("Capacity")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR2(150)");

                    b.Property<DateTime>("RegisterDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TIMESTAMP(7)")
                        .HasDefaultValueSql("SYSDATE");

                    b.Property<string>("floorPlan")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("structurePlan")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("PARKINGS", (string)null);
                });

            modelBuilder.Entity("PulseSystem.Domain.Entities.Zone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("VARCHAR2(500)");

                    b.Property<decimal>("Length")
                        .HasColumnType("NUMBER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR2(100)");

                    b.Property<long>("ParkingId")
                        .HasColumnType("NUMBER(19)");

                    b.Property<decimal>("Width")
                        .HasColumnType("NUMBER");

                    b.HasKey("Id");

                    b.HasIndex("ParkingId");

                    b.ToTable("ZONES", (string)null);
                });

            modelBuilder.Entity("PulseSystem.Domain.Entities.Gateway", b =>
                {
                    b.HasOne("PulseSystem.Domain.Entities.Parking", "Parking")
                        .WithMany("Gateways")
                        .HasForeignKey("ParkingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parking");
                });

            modelBuilder.Entity("PulseSystem.Domain.Entities.Parking", b =>
                {
                    b.OwnsOne("PulseSystem.Domain.Entities.Address", "Location", b1 =>
                        {
                            b1.Property<long>("ParkingId")
                                .HasColumnType("NUMBER(19)");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasMaxLength(9)
                                .HasColumnType("NVARCHAR2(9)")
                                .HasColumnName("Cep");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("NVARCHAR2(100)")
                                .HasColumnName("City");

                            b1.Property<string>("Complement")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("NVARCHAR2(50)")
                                .HasColumnName("Complement");

                            b1.Property<string>("Neighborhood")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("NVARCHAR2(100)")
                                .HasColumnName("Neighborhood");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("NVARCHAR2(50)")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("NVARCHAR2(100)")
                                .HasColumnName("Street");

                            b1.HasKey("ParkingId");

                            b1.ToTable("PARKINGS");

                            b1.WithOwner()
                                .HasForeignKey("ParkingId");
                        });

                    b.Navigation("Location")
                        .IsRequired();
                });

            modelBuilder.Entity("PulseSystem.Domain.Entities.Zone", b =>
                {
                    b.HasOne("PulseSystem.Domain.Entities.Parking", "Parking")
                        .WithMany("Zones")
                        .HasForeignKey("ParkingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parking");
                });

            modelBuilder.Entity("PulseSystem.Domain.Entities.Parking", b =>
                {
                    b.Navigation("Gateways");

                    b.Navigation("Zones");
                });
#pragma warning restore 612, 618
        }
    }
}
